<?php

/**
 * This is the model base class for the table "configurl_funciones_mapa_grande".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "MapaGrande".
 *
 * Columns in table "configurl_funciones_mapa_grande" available as properties of the model,
 * followed by relations of table "configurl_funciones_mapa_grande" available as properties of the model.
 *
 * @property integer $id
 * @property string $configurl_Id
 * @property string $EventoId
 * @property string $FuncionId
 * @property string $nombre_imagen
 *
 * @property Configurl $configurl
 * @property Funciones $evento
 * @property Funciones $funcion
 */
abstract class BaseMapaGrande extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'configurl_funciones_mapa_grande';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'MapaGrande|MapaGrandes', $n);
	}

	public static function representingColumn() {
		return 'nombre_imagen';
	}

	public function rules() {
		return array(
			array('configurl_Id, EventoId, FuncionId', 'required'),
			array('configurl_Id, EventoId, FuncionId', 'length', 'max'=>20),
			array('nombre_imagen', 'length', 'max'=>45),
			array('nombre_imagen', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, configurl_Id, EventoId, FuncionId, nombre_imagen', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'configurl' => array(self::BELONGS_TO, 'Configurl', 'configurl_Id'),
			'evento' => array(self::BELONGS_TO, 'Eventos', 'EventoId'),
			'funcion' => array(self::BELONGS_TO, 'Funciones', 'FuncionId'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'configurl_Id' => null,
			'EventoId' => null,
			'FuncionId' => null,
			'nombre_imagen' => Yii::t('app', 'Nombre Imagen'),
			'configurl' => null,
			'evento' => null,
			'funcion' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('configurl_Id', $this->configurl_Id);
		$criteria->compare('EventoId', $this->EventoId);
		$criteria->compare('FuncionId', $this->FuncionId);
		$criteria->compare('nombre_imagen', $this->nombre_imagen, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}